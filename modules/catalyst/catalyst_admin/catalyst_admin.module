<?php
/**
 * @file
 * Code for the Catalyst Admin feature.
 */

include_once 'catalyst_admin.features.inc';

/**
 * Implements hook_menu().
 */
function catalyst_admin_menu() {
  $items = array();
  // Add a "catalyst fields only" report
  if (module_exists('field_ui')) {
    $items['admin/reports/fields/catalyst'] = array(
      'title' => t('Catalyst'),
      'page callback' => 'catalyst_field_ui_catalyst_field_list',
      'access arguments' => array('need to define a permission'),
      'file path' => catalyst_get_path() . '/includes',
      'file' => 'fields.inc',
      'type' => MENU_LOCAL_TASK,
    );
  }
  return $items;
}

/**
 * Implements hook_theme_registry_alter().
 *
 * Allow disabling tablesort from multiple value form widgets.
 *
 * @code
 *  $element['#nodrag'] = TRUE;
 * @endcode
 *
 * @see https://www.commercialprogression.com/post/how-remove-tabledrag-rearranging-multiple-value-field-widgets
 */
function catalyst_admin_theme_registry_alter(&$theme_registry) {
  $hook = 'field_multiple_value_form';
  if (isset($theme_registry[$hook])) {
    $module_path = catalyst_get_path('admin');
    $theme_registry[$hook] = array_merge($theme_registry[$hook], array(
      'type' => 'module',
      'theme path' => $module_path,
      'includes' => array($module_path . '/includes/theme.inc'),
      'function' => 'multi_widget_remove_tabledrag_theme_field_multiple_value_form',
    ));
  }
}

/**
 * Implements hook_form_alter().
 */
function catalyst_admin_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['field__admin_notes'])) {
    if (isset($form['#node'])) {
      $wrapper = entity_metadata_wrapper('node', $form['#node']);
    }
    elseif (isset($form['#entity_type'])) {
      $wrapper = entity_metadata_wrapper($form['#entity_type'], $form['#entity']);
    }
    $form['catalyst_form_help'] = array(
      '#type' => 'markup',
      '#markup' => '<p class="help catalyst-form-help">' . entity_valval($wrapper->field__admin_notes) . '</p>',
      '#weight' => -100000,
    );
  }

  // Alter views bulk operations forms
  if (strpos($form_id, 'views_form_') === 0 && isset($form['output'])) {
    // After build callback in catalyst_admin/includes/uncommon.inc
    catalyst_form_load_include($form_state, 'uncommon', 'admin');
    $form['#after_build'][] = 'catalyst_admin_views_form_after_build';
  }
}

/**
 *
 * @param $links array
 *   Contains one or more links expecting the following:
 *   - title: The translated link text
 *   - path: The path the link should link to
 *   - destination: (optional) the destination to append to the link query
 *     string
 *   - access: (optional) can be a string for a single permission or an
 *     array containing multiple permissions.
 *
 * @return
 *   When the user has access to one or more links (or no permissions are
 *   defined), a unorder list of links classed "action-links" is returned.
 */
function catalyst_admin_action_links(array $links) {
  $return = array();
  foreach ($links AS $class => $link) {
    if (isset($link['access'])) {
      foreach ((array)$link['access'] AS $permission) {
        if (!user_access($permission)) {
          continue(2);
        }
      }
    }
    $return[$class] = array(
      'title' => $link['title'],
      'href' => $link['path'],
    );
    if (!empty($link['destination'])) {
      $return[$class]['query']['destination'] = $link['destination'];
    }
  }
  if ($return) {
    return theme('links', array(
      'links' => $return,
      'attributes' => array('class' => 'action-links'),
    ));
  }
}
