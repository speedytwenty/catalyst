[
    {
        "regions": [
            {
                "machine": "layout_test_region",
                "text": "Layout Test Region"
            },
            {
                "machine": "page_test_region",
                "text": "Page Test Region"
            },
            {
                "machine": "block_test_region",
                "text": "Block Test Region"
            }
        ],
        "drupal_css_options": [],
        "drupal_js_options": [],
        "page_title_pattern": "{{ title }} | TEST",
        "show_messages": false,
        "block_placements": [
            {
                "region": "layout_test_region",
                "weight": "-50",
                "visibility": "0",
                "pages": "",
                "cache": "0"
            }
        ],
        "block_placement_ids": [
            "3"
        ],
        "id": "catalyst_test_1",
        "title": "Catalyst Test Layout #1",
        "created": "1467523457",
        "changed": "1467524767",
        "content": "<script>\n  QUnit.test(\"Layout Basics Tests\", function (assert) {\n    assert.equal('{{ test_layout_var }}', 'preprocess var val', 'Layout Preprocessing Test');\n    assert.ok(jQuery('head meta#layout-custom-head-test').length, 'Layout Custom HTML Head Test');\n    assert.ok('{{ title }}', 'Layout (page) title variable test');\n  });\n  QUnit.test(\"Layout JS Tests\", function (assert) {\n    assert.notEqual(typeof layout_custom_js_var, 'undefined', 'Layout Custom Javascript Test');\n    assert.notEqual(typeof layout_shared_js_var, 'undefined', 'Layout Shared Javascript Test');\n    assert.notEqual(typeof layout_remote_js_var, 'undefined', 'Layout Remote Javascript Test');\n    assert.notEqual(typeof layout_local_js_var, 'undefined', 'Layout Local Javascript Test');\n    assert.notEqual(typeof layout_footer_js_var, 'undefined', 'Layout Footer Javascript Test');\n  });\n<\/script>\n<h3>Layout CSS Tests<\/h3>\n<ul>\n  <li class=\"layout-custom-css-test\">This should have a <strong>solid<\/strong> border.<\/li>\n  <li class=\"layout-shared-css-test\">This should have a <strong>double<\/strong> border.<\/li>\n  <li class=\"layout-remote-css-test\">This should have a <strong>dotted<\/strong> border.<\/li>\n  <li class=\"layout-local-css-test\">This should have a <strong>dashed<\/strong> border.<\/li>\n<\/ul>\n<script>\n  QUnit.test(\"Layout CSS Tests\", function (assert) {\n    assert.equal(jQuery('.layout-custom-css-test').css('border-top-style'), 'solid', 'Layout Custom CSS Test');\n    assert.equal(jQuery('.layout-shared-css-test').css('border-top-style'), 'double', 'Layout Shared CSS Test');\n    assert.equal(jQuery('.layout-local-css-test').css('border-top-style'), 'dashed', 'Layout Local CSS Test');\n    assert.equal(jQuery('.layout-remote-css-test').css('border-top-style'), 'dotted', 'Layout Remote CSS Test');\n  });\n<\/script>\n<h3>Layout Files Tests<\/h3>\n<strong>Custom file test:<\/strong>\n<ul>\n  <li>Test <em>custom<\/em> file PATH: <strong>{{ customfilepath('layout-custom-test.png') }}<\/strong><\/li>\n  <li>Test <em>custom<\/em> file URL: <strong>{{ customfileurl('layout-custom-test.png') }}<\/strong><\/li>\n  <li>Test <em>custom<\/em> file as image:<br \/><img id=\"layout-custom-file-test\" src=\"{{ customfilepath('layout-custom-test.png') }}\" \/><\/li>\n<\/ul>\n<strong>Shared file test:<\/strong>\n<ul>\n  <li>Test <em>shared<\/em> file PATH: <strong>{{ filepath('layout_shared_test') }}<\/strong><\/li>\n  <li>Test <em>shared<\/em> file URL: <strong>{{ fileurl('layout_shared_test') }}<\/strong><\/li>\n  <li>Test <em>shared<\/em> file as image:<br \/><img id=\"layout-shared-file-test\" src=\"{{ filepath('layout_shared_test') }}\" \/><\/li>\n<\/ul>\n<strong>Local file test:<\/strong>\n<ul>\n  <li>Test <em>local<\/em> file PATH: <strong>{{ filepath('layout_local_test') }}<\/strong><\/li>\n  <li>Test <em>local<\/em> file URL: <strong>{{ fileurl('layout_local_test') }}<\/strong><\/li>\n  <li>Test <em>local<\/em> file as image:<br \/><img id=\"layout-local-file-test\" src=\"{{ filepath('layout_local_test') }}\" \/><\/li>\n<\/ul>\n<strong>Remote file test:<\/strong>\n<ul>\n  <li>Test <em>remote<\/em> file PATH: <strong>{{ filepath('layout_remote_test') }}<\/strong><\/li>\n  <li>Test <em>remote<\/em> file URL: <strong>{{ fileurl('layout_remote_test') }}<\/strong><\/li>\n  <li>Test <em>remote<\/em> file as image:<br \/><img id=\"layout-remote-file-test\" src=\"{{ filepath('layout_remote_test') }}\" \/><\/li>\n<\/ul>\n<script>\nQUnit.test(\"Layout Files Tests\", function (assert) {\n  var layoutCustomFileImg = jQuery('img#layout-custom-file-test');\n  assert.ok(layoutCustomFileImg.attr('src'), 'Layout Custom File Data Test');\n  assert.equal(layoutCustomFileImg.width(), 401, 'Layout Custom File Exists Test');\n  var layoutSharedFileImg = jQuery('img#layout-shared-file-test');\n  assert.ok(layoutSharedFileImg.attr('src'), 'Layout Shared File Data Test');\n  assert.equal(layoutSharedFileImg.width(), 301, 'Layout Shared File Exists Test');\n  var layoutLocalFileImg = jQuery('img#layout-local-file-test');\n  assert.ok(layoutLocalFileImg.attr('src'), 'Layout Local File Data Test');\n  assert.equal(layoutLocalFileImg.width(), 201, 'Layout Local File Exists Test');\n  var layoutRemoteFileImg = jQuery('img#layout-remote-file-test');\n  assert.ok(layoutRemoteFileImg.attr('src'), 'Layout Remote File Data Test');\n  assert.equal(layoutRemoteFileImg.width(), 101, 'Layout Remote File Exists Test');\n});\n<\/script>\n<h3>Layout Block Tests<\/h3>\n{{ showblock('layout_embedded_block_test') }}\n{% if region.layout_test_region %}\n<div id=\"layout-test-region\" class=\"layout-region\">{{ region.layout_test_region }}<\/div>\n{% endif %}\n<script>\nQUnit.test(\"Layout Block Tests\", function (assert) {\n  assert.ok(jQuery('#layout-embedded-block').length, 'Layout Embedded Block Embedded Test');\n  assert.ok(jQuery('#layout-test-region #layout-region-block').length, 'Layout Region Block Embedded Test');\n});\n<\/script>\n{{ content }}\n{% if region.page_test_region %}\n  <div id=\"page-test-region\" class=\"region-container\">\n    <h4>Page Test Region<\/h4>\n    {{ region.page_test_region }}\n  <\/div>\n{% endif %}\n<h2>Leaf Block Tests<\/h2>\n{{ showblock('block_embed_test') }}\n{% if region.block_test_region %}\n  <div id=\"block-test-region\" class=\"region-container\">\n    <h4>Block Test Region<\/h4>\n    {{ region.block_test_region }}\n  <\/div>\n{% endif %}\n<script>\nQUnit.test(\"Leaf Block Tests\", function (assert) {\n  assert.ok(jQuery('#embedded-block').length, 'Leaf Embedded Block Embedded Test');\n  assert.ok(jQuery('#block-test-region #region-block').length, 'Leaf Region Block Embedded Test');\n});\n<\/script>",
        "css_custom": ".layout-custom-css-test,\n.layout-custom-css-test-override {\n  border: 2px solid blue;\n  padding: 4px;\n  margin: 4px;\n}\n.region-container { \n  border: 2px dashed #f1f1f1;\n  padding: 5px;\n}",
        "debug": true,
        "drupal_processing": false,
        "html_head": "<meta id=\"layout-custom-head-test\" value=\"success\" \/>",
        "internal": false,
        "files_custom": [
            "15\/layout-custom-test.png"
        ],
        "js_custom": "var layout_custom_js_var = 'defined';",
        "machine": "catalyst_test_1",
        "onselect": null,
        "ondeselect": null,
        "package": "catalyst_test",
        "preprocess_php": "$variables['test_layout_var'] = 'preprocess var val';",
        "admin_notes": null,
        "doctype": "catalyst_test_1",
        "stylesheets": [
            "layout_test_shared",
            "layout_test_local_",
            "layout_test_remote"
        ],
        "javascripts": [
            "layout_shared_js_test",
            "layout_local_js_test",
            "layout_remote_js_test",
            "layout_footer_js_test"
        ],
        "files_shared": [
            "layout_shared_test",
            "layout_local_test",
            "layout_remote_test"
        ]
    },
    {
        "regions": [],
        "drupal_css_options": [],
        "drupal_js_options": [],
        "page_title_pattern": "{{ title }} | {{ site_name }}",
        "show_messages": false,
        "block_placements": [],
        "block_placement_ids": [],
        "id": "catalyst_test_json",
        "title": "Catalyst Test - JSON",
        "created": "1467523458",
        "changed": "1467523935",
        "content": "{{ content }}",
        "css_custom": null,
        "debug": false,
        "drupal_processing": false,
        "html_head": null,
        "internal": false,
        "files_custom": [],
        "js_custom": null,
        "machine": "catalyst_test_json",
        "onselect": null,
        "ondeselect": null,
        "package": "catalyst_test",
        "preprocess_php": null,
        "admin_notes": null,
        "doctype": "catalyst_test_json",
        "stylesheets": [],
        "javascripts": [],
        "files_shared": []
    },
    {
        "regions": [],
        "drupal_css_options": [],
        "drupal_js_options": [],
        "page_title_pattern": "{{ title }} | {{ site_name }}",
        "show_messages": false,
        "block_placements": [],
        "block_placement_ids": [],
        "id": "catalyst_test_default_html",
        "title": "Catalyst Test - Default HTML",
        "created": "1467523457",
        "changed": "1467523934",
        "content": "<h1>{{ title }}<\/h1>\n<div id=\"content\">{{ content }}<\/div>",
        "css_custom": null,
        "debug": false,
        "drupal_processing": false,
        "html_head": null,
        "internal": false,
        "files_custom": [],
        "js_custom": null,
        "machine": "catalyst_test_default_html",
        "onselect": null,
        "ondeselect": null,
        "package": "catalyst_test",
        "preprocess_php": null,
        "admin_notes": null,
        "doctype": "catalyst_test_default",
        "stylesheets": [],
        "javascripts": [],
        "files_shared": []
    }
]