[{"id":"29","title":"Block Embed Test","created":"1451598666","changed":"1451624622","machine":"block_embed_test","content":"\u003Ch2\u003ERegion Block Tests\u003C\/h2\u003E\n\u003Ch3 id=\u0022embedded-block\u0022\u003EThis is a manually embedded block.\u003C\/h3\u003E\n\u003Cp\u003EThis block has it\u0027s own files, css, javascipt, and processing.\u003C\/p\u003E\n\u003Ch3\u003EEmbedded Block CSS Tests\u003C\/h3\u003E\n\u003Cul\u003E\u003Cli class=\u0022block-embed-custom-css-test\u0022\u003EThis should have a \u003Cstrong\u003Esolid\u003C\/strong\u003E border.\u003C\/li\u003E\n  \u003Cli class=\u0022block-embed-shared-css-test\u0022\u003EThis should have a \u003Cstrong\u003Edouble\u003C\/strong\u003E border.\u003C\/li\u003E\n  \u003Cli class=\u0022block-embed-remote-css-test\u0022\u003EThis should have a \u003Cstrong\u003Edotted\u003C\/strong\u003E border.\u003C\/li\u003E\n  \u003Cli class=\u0022block-embed-local-css-test\u0022\u003EThis should have a \u003Cstrong\u003Edashed\u003C\/strong\u003E border.\u003C\/li\u003E\n\u003C\/ul\u003E\u003Cscript\u003E\n\u003C!--\/\/--\u003E\u003C![CDATA[\/\/ \u003E\u003C!--\n\n  QUnit.test(\u0022Embedded Block CSS Tests\u0022, function (assert) {\n    assert.equal(jQuery(\u0027.block-embed-custom-css-test\u0027).css(\u0027border-top-style\u0027), \u0027solid\u0027, \u0027Embedded Block Custom CSS Test\u0027);\n    assert.equal(jQuery(\u0027.block-embed-shared-css-test\u0027).css(\u0027border-top-style\u0027), \u0027double\u0027, \u0027Embedded Block Shared CSS Test\u0027);\n    assert.equal(jQuery(\u0027.block-embed-local-css-test\u0027).css(\u0027border-top-style\u0027), \u0027dashed\u0027, \u0027Embedded Block Local CSS Test\u0027);\n    assert.equal(jQuery(\u0027.block-embed-remote-css-test\u0027).css(\u0027border-top-style\u0027), \u0027dotted\u0027, \u0027Embedded Block Remote CSS Test\u0027);\n  });\n\n\/\/--\u003E\u003C!]]\u003E\n\u003C\/script\u003E\u003Ch3\u003EEmbedded Block Files Tests\u003C\/h3\u003E\n\u003Cstrong\u003ECustom file test:\u003C\/strong\u003E\n\u003Cul\u003E\u003Cli\u003ETest \u003Cem\u003Ecustom\u003C\/em\u003E file PATH: \u003Cstrong\u003E{{ customfilepath(\u0027block-embed-custom-test.png\u0027) }}\u003C\/strong\u003E\u003C\/li\u003E\n  \u003Cli\u003ETest \u003Cem\u003Ecustom\u003C\/em\u003E file URL: \u003Cstrong\u003E{{ customfileurl(\u0027block-embed-custom-test.png\u0027) }}\u003C\/strong\u003E\u003C\/li\u003E\n  \u003Cli\u003ETest \u003Cem\u003Ecustom\u003C\/em\u003E file as image:\u003Cbr \/\u003E\u003Cimg id=\u0022block-embed-custom-file-test\u0022 src=\u0022{{ customfilepath(\u0027block-embed-custom-test.png\u0027) }}\u0022 \/\u003E\u003C\/li\u003E\n\u003C\/ul\u003E\u003Cstrong\u003EShared file test:\u003C\/strong\u003E\n\u003Cul\u003E\u003Cli\u003ETest \u003Cem\u003Eshared\u003C\/em\u003E file PATH: \u003Cstrong\u003E{{ filepath(\u0027block_embed_shared_test\u0027) }}\u003C\/strong\u003E\u003C\/li\u003E\n  \u003Cli\u003ETest \u003Cem\u003Eshared\u003C\/em\u003E file URL: \u003Cstrong\u003E{{ fileurl(\u0027block_embed_shared_test\u0027) }}\u003C\/strong\u003E\u003C\/li\u003E\n  \u003Cli\u003ETest \u003Cem\u003Eshared\u003C\/em\u003E file as image:\u003Cbr \/\u003E\u003Cimg id=\u0022block-embed-shared-file-test\u0022 src=\u0022{{ filepath(\u0027block_embed_shared_test\u0027) }}\u0022 \/\u003E\u003C\/li\u003E\n\u003C\/ul\u003E\u003Cstrong\u003ELocal file test:\u003C\/strong\u003E\n\u003Cul\u003E\u003Cli\u003ETest \u003Cem\u003Elocal\u003C\/em\u003E file PATH: \u003Cstrong\u003E{{ filepath(\u0027block_embed_local_test\u0027) }}\u003C\/strong\u003E\u003C\/li\u003E\n  \u003Cli\u003ETest \u003Cem\u003Elocal\u003C\/em\u003E file URL: \u003Cstrong\u003E{{ fileurl(\u0027block_embed_local_test\u0027) }}\u003C\/strong\u003E\u003C\/li\u003E\n  \u003Cli\u003ETest \u003Cem\u003Elocal\u003C\/em\u003E file as image:\u003Cbr \/\u003E\u003Cimg id=\u0022block-embed-local-file-test\u0022 src=\u0022{{ filepath(\u0027block_embed_local_test\u0027) }}\u0022 \/\u003E\u003C\/li\u003E\n\u003C\/ul\u003E\u003Cstrong\u003ERemote file test:\u003C\/strong\u003E\n\u003Cul\u003E\u003Cli\u003ETest \u003Cem\u003Eremote\u003C\/em\u003E file PATH: \u003Cstrong\u003E{{ filepath(\u0027block_embed_remote_test\u0027) }}\u003C\/strong\u003E\u003C\/li\u003E\n  \u003Cli\u003ETest \u003Cem\u003Eremote\u003C\/em\u003E file URL: \u003Cstrong\u003E{{ fileurl(\u0027block_embed_remote_test\u0027) }}\u003C\/strong\u003E\u003C\/li\u003E\n  \u003Cli\u003ETest \u003Cem\u003Eremote\u003C\/em\u003E file as image:\u003Cbr \/\u003E\u003Cimg id=\u0022block-embed-remote-file-test\u0022 src=\u0022{{ filepath(\u0027block_embed_remote_test\u0027) }}\u0022 \/\u003E\u003C\/li\u003E\n\u003C\/ul\u003E\u003Cscript\u003E\n\u003C!--\/\/--\u003E\u003C![CDATA[\/\/ \u003E\u003C!--\n\nQUnit.test(\u0022Embedded Block Tests\u0022, function (assert) {\n  assert.ok(\u0027{{ title }}\u0027, \u0027Block \u0022title\u0022 variable Test\u0027);\n  assert.equal(\u0027{{ leaf_embedded_block_var }}\u0027, \u0027embedded block var val\u0027, \u0027Embedded Block Processing Test\u0027);\n});  \nQUnit.test(\u0022Embedded Block Javascript Tests\u0022, function (assert) {\n  assert.notEqual(typeof block_embed_custom_js_var, \u0027undefined\u0027, \u0027Embedded Block Custom Javascript Test\u0027);\n  assert.notEqual(typeof block_embed_shared_js_var, \u0027undefined\u0027, \u0027Embedded Block Shared Javascript Test\u0027);\n  assert.notEqual(typeof block_embed_remote_js_var, \u0027undefined\u0027, \u0027Embedded Block Remote Javascript Test\u0027);\n  assert.notEqual(typeof block_embed_local_js_var, \u0027undefined\u0027, \u0027Embedded Block Local Javascript Test\u0027);\n  assert.notEqual(typeof block_embed_footer_js_var, \u0027undefined\u0027, \u0027Embedded Block Footer Javascript Test\u0027);\n});\nQUnit.test(\u0022Embedded Block Files Tests\u0022, function (assert) {\n  var blockEmbedCustomFileImg = jQuery(\u0027img#block-embed-custom-file-test\u0027);\n  assert.ok(blockEmbedCustomFileImg.attr(\u0027src\u0027), \u0027Embedded Block Custom File Data Test\u0027);\n  assert.equal(blockEmbedCustomFileImg.width(), 410, \u0027Embedded Block Custom File Exists Test\u0027);\n  var blockEmbedSharedFileImg = jQuery(\u0027img#block-embed-shared-file-test\u0027);\n  assert.ok(blockEmbedSharedFileImg.attr(\u0027src\u0027), \u0027Embedded Block Shared File Data Test\u0027);\n  assert.equal(blockEmbedSharedFileImg.width(), 310, \u0027Embedded Block Shared File Exists Test\u0027);\n  var blockEmbedLocalFileImg = jQuery(\u0027img#block-embed-local-file-test\u0027);\n  assert.ok(blockEmbedLocalFileImg.attr(\u0027src\u0027), \u0027Embedded Block Local File Data Test\u0027);\n  assert.equal(blockEmbedLocalFileImg.width(), 210, \u0027Embedded Block Local File Exists Test\u0027);\n  var blockEmbedRemoteFileImg = jQuery(\u0027img#block-embed-remote-file-test\u0027);\n  assert.ok(blockEmbedRemoteFileImg.attr(\u0027src\u0027), \u0027Embedded Block Remote File Data Test\u0027);\n  assert.equal(blockEmbedRemoteFileImg.width(), 110, \u0027Embedded Block Remote File Exists Test\u0027);\n});\n\n\/\/--\u003E\u003C!]]\u003E\n\u003C\/script\u003E","css_custom":".block-embed-custom-css-test {\n  border: 2px solid orange;\n  padding: 4px;\n  margin: 4px;\n}","js_custom":"var block_embed_custom_js_var = \u0027defined\u0027;","preprocess_php":"$variables[\u0027leaf_embedded_block_var\u0027] = \u0027embedded block var val\u0027;","block_placements":[],"block_placement_layout_ids":[],"files_custom":["29\/block-embed-custom-test.png"],"js_includes":["44","45","46","47"],"css_includes":["41","42","43"],"files_shared":["48","49","50"]},{"id":"30","title":"Block Region Test","created":"1451598778","changed":"1451623640","machine":"block_region_test","content":"\u003Ch2\u003ERegion Block Tests\u003C\/h2\u003E\n\u003Ch3 id=\u0022region-block\u0022\u003EThis is a block placed into a region via the block itself.\u003C\/h3\u003E\n\u003Ch3\u003ERegion Block CSS Tests\u003C\/h3\u003E\n\u003Cul\u003E\u003Cli class=\u0022block-custom-css-test\u0022\u003EThis should have a \u003Cstrong\u003Esolid\u003C\/strong\u003E border.\u003C\/li\u003E\n  \u003Cli class=\u0022block-shared-css-test\u0022\u003EThis should have a \u003Cstrong\u003Edouble\u003C\/strong\u003E border.\u003C\/li\u003E\n  \u003Cli class=\u0022block-remote-css-test\u0022\u003EThis should have a \u003Cstrong\u003Edotted\u003C\/strong\u003E border.\u003C\/li\u003E\n  \u003Cli class=\u0022block-local-css-test\u0022\u003EThis should have a \u003Cstrong\u003Edashed\u003C\/strong\u003E border.\u003C\/li\u003E\n\u003C\/ul\u003E\u003Cscript\u003E\n\u003C!--\/\/--\u003E\u003C![CDATA[\/\/ \u003E\u003C!--\n\n  QUnit.test(\u0022Region Block CSS Tests\u0022, function (assert) {\n    assert.equal(jQuery(\u0027.block-custom-css-test\u0027).css(\u0027border-top-style\u0027), \u0027solid\u0027, \u0027Region Block Custom CSS Test\u0027);\n    assert.equal(jQuery(\u0027.block-shared-css-test\u0027).css(\u0027border-top-style\u0027), \u0027double\u0027, \u0027Region Block Shared CSS Test\u0027);\n    assert.equal(jQuery(\u0027.block-local-css-test\u0027).css(\u0027border-top-style\u0027), \u0027dashed\u0027, \u0027Region Block Local CSS Test\u0027);\n    assert.equal(jQuery(\u0027.block-remote-css-test\u0027).css(\u0027border-top-style\u0027), \u0027dotted\u0027, \u0027Region Block Remote CSS Test\u0027);\n  });\n\n\/\/--\u003E\u003C!]]\u003E\n\u003C\/script\u003E\u003Ch3\u003ERegion Block Files Tests\u003C\/h3\u003E\n\u003Cstrong\u003ECustom file test:\u003C\/strong\u003E\n\u003Cul\u003E\u003Cli\u003ETest \u003Cem\u003Ecustom\u003C\/em\u003E file PATH: \u003Cstrong\u003E{{ customfilepath(\u0027block-custom-test.png\u0027) }}\u003C\/strong\u003E\u003C\/li\u003E\n  \u003Cli\u003ETest \u003Cem\u003Ecustom\u003C\/em\u003E file URL: \u003Cstrong\u003E{{ customfileurl(\u0027block-custom-test.png\u0027) }}\u003C\/strong\u003E\u003C\/li\u003E\n  \u003Cli\u003ETest \u003Cem\u003Ecustom\u003C\/em\u003E file as image:\u003Cbr \/\u003E\u003Cimg id=\u0022block-custom-file-test\u0022 src=\u0022{{ customfilepath(\u0027block-custom-test.png\u0027) }}\u0022 \/\u003E\u003C\/li\u003E\n\u003C\/ul\u003E\u003Cstrong\u003EShared file test:\u003C\/strong\u003E\n\u003Cul\u003E\u003Cli\u003ETest \u003Cem\u003Eshared\u003C\/em\u003E file PATH: \u003Cstrong\u003E{{ filepath(\u0027block_shared_test\u0027) }}\u003C\/strong\u003E\u003C\/li\u003E\n  \u003Cli\u003ETest \u003Cem\u003Eshared\u003C\/em\u003E file URL: \u003Cstrong\u003E{{ fileurl(\u0027block_shared_test\u0027) }}\u003C\/strong\u003E\u003C\/li\u003E\n  \u003Cli\u003ETest \u003Cem\u003Eshared\u003C\/em\u003E file as image:\u003Cbr \/\u003E\u003Cimg id=\u0022block-shared-file-test\u0022 src=\u0022{{ filepath(\u0027block_shared_test\u0027) }}\u0022 \/\u003E\u003C\/li\u003E\n\u003C\/ul\u003E\u003Cstrong\u003ELocal file test:\u003C\/strong\u003E\n\u003Cul\u003E\u003Cli\u003ETest \u003Cem\u003Elocal\u003C\/em\u003E file PATH: \u003Cstrong\u003E{{ filepath(\u0027block_local_test\u0027) }}\u003C\/strong\u003E\u003C\/li\u003E\n  \u003Cli\u003ETest \u003Cem\u003Elocal\u003C\/em\u003E file URL: \u003Cstrong\u003E{{ fileurl(\u0027block_local_test\u0027) }}\u003C\/strong\u003E\u003C\/li\u003E\n  \u003Cli\u003ETest \u003Cem\u003Elocal\u003C\/em\u003E file as image:\u003Cbr \/\u003E\u003Cimg id=\u0022block-local-file-test\u0022 src=\u0022{{ filepath(\u0027block_local_test\u0027) }}\u0022 \/\u003E\u003C\/li\u003E\n\u003C\/ul\u003E\u003Cstrong\u003ERemote file test:\u003C\/strong\u003E\n\u003Cul\u003E\u003Cli\u003ETest \u003Cem\u003Eremote\u003C\/em\u003E file PATH: \u003Cstrong\u003E{{ filepath(\u0027block_remote_test\u0027) }}\u003C\/strong\u003E\u003C\/li\u003E\n  \u003Cli\u003ETest \u003Cem\u003Eremote\u003C\/em\u003E file URL: \u003Cstrong\u003E{{ fileurl(\u0027block_remote_test\u0027) }}\u003C\/strong\u003E\u003C\/li\u003E\n  \u003Cli\u003ETest \u003Cem\u003Eremote\u003C\/em\u003E file as image:\u003Cbr \/\u003E\u003Cimg id=\u0022block-remote-file-test\u0022 src=\u0022{{ filepath(\u0027block_remote_test\u0027) }}\u0022 \/\u003E\u003C\/li\u003E\n\u003C\/ul\u003E\u003Cscript\u003E\n\u003C!--\/\/--\u003E\u003C![CDATA[\/\/ \u003E\u003C!--\n\nQUnit.test(\u0022Region Block Tests\u0022, function (assert) {\n  assert.ok(\u0027{{ title }}\u0027, \u0027Block \u0022title\u0022 variable Test\u0027);\n  assert.equal(\u0027{{ leaf_region_block_var }}\u0027, \u0027region block var val\u0027, \u0027Region Block Processing Test\u0027);\n});  \nQUnit.test(\u0022Region Block Javascript Tests\u0022, function (assert) {\n  assert.notEqual(typeof block_custom_js_var, \u0027undefined\u0027, \u0027Region Block Custom Javascript Test\u0027);\n  assert.notEqual(typeof block_shared_js_var, \u0027undefined\u0027, \u0027Region Block Shared Javascript Test\u0027);\n  assert.notEqual(typeof block_remote_js_var, \u0027undefined\u0027, \u0027Region Block Remote Javascript Test\u0027);\n  assert.notEqual(typeof block_local_js_var, \u0027undefined\u0027, \u0027Region Block Local Javascript Test\u0027);\n  assert.notEqual(typeof block_footer_js_var, \u0027undefined\u0027, \u0027Region Block Footer Javascript Test\u0027);\n});\nQUnit.test(\u0022Region Block Files Tests\u0022, function (assert) {\n  var blockCustomFileImg = jQuery(\u0027img#block-custom-file-test\u0027);\n  assert.ok(blockCustomFileImg.attr(\u0027src\u0027), \u0027Region Block Custom File Data Test\u0027);\n  assert.equal(blockCustomFileImg.width(), 403, \u0027Region Block Custom File Exists Test\u0027);\n  var blockSharedFileImg = jQuery(\u0027img#block-shared-file-test\u0027);\n  assert.ok(blockSharedFileImg.attr(\u0027src\u0027), \u0027Region Block Shared File Data Test\u0027);\n  assert.equal(blockSharedFileImg.width(), 303, \u0027Region Block Shared File Exists Test\u0027);\n  var blockLocalFileImg = jQuery(\u0027img#block-local-file-test\u0027);\n  assert.ok(blockLocalFileImg.attr(\u0027src\u0027), \u0027Region Block Local File Data Test\u0027);\n  assert.equal(blockLocalFileImg.width(), 203, \u0027Region Block Local File Exists Test\u0027);\n  var blockRemoteFileImg = jQuery(\u0027img#block-remote-file-test\u0027);\n  assert.ok(blockRemoteFileImg.attr(\u0027src\u0027), \u0027Region Block Remote File Data Test\u0027);\n  assert.equal(blockRemoteFileImg.width(), 103, \u0027Region Block Remote File Exists Test\u0027);\n});\n\n\/\/--\u003E\u003C!]]\u003E\n\u003C\/script\u003E","css_custom":".block-custom-css-test {\n  border: 2px solid red;\n  padding: 4px;\n  margin: 4px;\n}","js_custom":"var block_custom_js_var = \u0027defined\u0027;","preprocess_php":"$variables[\u0027leaf_region_block_var\u0027] = \u0027region block var val\u0027;","block_placements":[{"region":"block_test_region","weight":"0","visibility":"0","pages":"","cache":"0"}],"block_placement_layout_ids":["4"],"files_custom":["30\/block-custom-test.png"],"js_includes":["37","38","39","40"],"css_includes":["34","35","36"],"files_shared":["31","32","33"]},{"id":"53","title":"Catalyst Test - JSON","created":"1451950868","changed":"1451951154","machine":"catalyst_test_json","content":"\u003Cdiv id=\u0022json-test\u0022 class=\u0022block\u0022\u003E\n  \u003Ch3\u003EJSON Test\u003C\/h3\u003E\n  \u003Ch4 id=\u0022json-test-title\u0022\u003E\u003C\/h4\u003E\n  \u003Cp id=\u0022json-test-description\u0022\u003E\u003C\/p\u003E\n  \u003Cblockquote id=\u0022json-test-response\u0022\u003E\u003C\/blockquote\u003E\n\u003C\/div\u003E\n\u003Cscript type=\u0022text\/javascript\u0022\u003E\n\u003C!--\/\/--\u003E\u003C![CDATA[\/\/ \u003E\u003C!--\n\n  jQuery.ajax({\n    url: \u0027catalyst-test.json\u0027,\n  }).done(function (data) {\n    console.log(data);\n    jQuery(\u0027#json-test-response\u0027).html(data);\n    jQuery(\u0027#json-test-title\u0027).html(data.title);\n    jQuery(\u0027#json-test-description\u0027).html(data.description);\n  })\n\n\/\/--\u003E\u003C!]]\u003E\n\u003C\/script\u003E","css_custom":null,"js_custom":null,"preprocess_php":null,"block_placements":[{"region":"block_test_region","weight":"50","visibility":"0","pages":"","cache":"0"}],"block_placement_layout_ids":["4"],"files_custom":[],"js_includes":[],"css_includes":[],"files_shared":[]},{"id":"20","title":"Page Embedded Block Test","created":"1451591258","changed":"1451591258","machine":"page_embedded_block_test","content":"\u003Ch3 id=\u0022page-embedded-block\u0022\u003EThis is a block manually embedded by the page.\u003C\/h3\u003E\n\u003Cscript\u003E\n\u003C!--\/\/--\u003E\u003C![CDATA[\/\/ \u003E\u003C!--\n\nQUnit.test(\u0022Page Embedded Block Tests\u0022, function (assert) {\n  assert.equal(\u0027{{ page_embedded_block_var }}\u0027, \u0027embedded block var val\u0027, \u0027Page Embedded Block Processing Test\u0027);\n});\n\n\/\/--\u003E\u003C!]]\u003E\n\u003C\/script\u003E","css_custom":null,"js_custom":null,"preprocess_php":"$variables[\u0027page_embedded_block_var\u0027] = \u0027embedded block var val\u0027;","block_placements":[],"block_placement_layout_ids":[],"files_custom":[],"js_includes":[],"css_includes":[],"files_shared":[]},{"id":"21","title":"Page Region Block Test","created":"1451591258","changed":"1451591258","machine":"page_region_block_test","content":"\u003Ch3 id=\u0022page-region-block\u0022\u003EThis is a block placed into a region via the page.\u003C\/h3\u003E\n\u003Cscript\u003E\n\u003C!--\/\/--\u003E\u003C![CDATA[\/\/ \u003E\u003C!--\n\nQUnit.test(\u0022Page Region Block Tests\u0022, function (assert) {\n  assert.equal(\u0027{{ page_region_block_var }}\u0027, \u0027region block var val\u0027, \u0027Page Region Block Processing Test\u0027);\n});\n\n\/\/--\u003E\u003C!]]\u003E\n\u003C\/script\u003E","css_custom":null,"js_custom":null,"preprocess_php":"$variables[\u0027page_region_block_var\u0027] = \u0027region block var val\u0027;","block_placements":[],"block_placement_layout_ids":[],"files_custom":[],"js_includes":[],"css_includes":[],"files_shared":[]},{"id":"13","title":"Layout Embedded Block Test","created":"1451554771","changed":"1451591519","machine":"layout_embedded_block_test","content":"\u003Ch3 id=\u0022layout-embedded-block\u0022\u003EThis is a block manually embedded in the layout.\u003C\/h3\u003E\n\u003Cscript\u003E\n\u003C!--\/\/--\u003E\u003C![CDATA[\/\/ \u003E\u003C!--\n\nQUnit.test(\u0022Layout Embedded Block Tests\u0022, function (assert) {\n  assert.equal(\u0027{{ embedded_block_var }}\u0027, \u0027embedded block var val\u0027, \u0027Layout Embedded Block Processing Test\u0027);\n});\n\n\/\/--\u003E\u003C!]]\u003E\n\u003C\/script\u003E","css_custom":null,"js_custom":null,"preprocess_php":"$variables[\u0027embedded_block_var\u0027] = \u0027embedded block var val\u0027;","block_placements":[],"block_placement_layout_ids":[],"files_custom":[],"js_includes":[],"css_includes":[],"files_shared":[]},{"id":"14","title":"Layout Region Block Test","created":"1451555255","changed":"1451555484","machine":"layout_region_block_test","content":"\u003Ch3 id=\u0022layout-region-block\u0022\u003EThis is a block placed into a region via the layout.\u003C\/h3\u003E\n\u003Cscript\u003E\n\u003C!--\/\/--\u003E\u003C![CDATA[\/\/ \u003E\u003C!--\n\nQUnit.test(\u0022Layout Region Block Tests\u0022, function (assert) {\n  assert.equal(\u0027{{ region_block_var }}\u0027, \u0027region block var val\u0027, \u0027Layout Region Block Processing Test\u0027);\n});\n\n\/\/--\u003E\u003C!]]\u003E\n\u003C\/script\u003E","css_custom":null,"js_custom":null,"preprocess_php":"$variables[\u0027region_block_var\u0027] = \u0027region block var val\u0027;","block_placements":[],"block_placement_layout_ids":[],"files_custom":[],"js_includes":[],"css_includes":[],"files_shared":[]}]
