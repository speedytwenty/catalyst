<?php
/**
 * @file
 * Code for the Catalyst Media feature.
 */

include_once 'catalyst_media.features.inc';

/**
 * Implements hook_ctools_plugin_directory().
 */
function catalyst_media_ctools_plugin_directory($owner, $type) {
  if ($owner == 'catalyst_core') {
    return $type == 'plugin' ? 'plugins/catalyst' : 'plugins/' . $type;
  }
}

/**
 * Implements hook_catalyst_twig_alter().
 */
function catalyst_media_catalyst_twig_alter(&$twig) {
  $twig->addFunction(new Twig_SimpleFunction('filepath', 'catalyst_media_filepath'));
  $twig->addFunction(new Twig_SimpleFunction('fileurl', 'catalyst_media_fileurl'));
  $twig->addFunction(new Twig_SimpleFunction('fileuri', 'catalyst_media_fileuri'));
}

function catalyst_media_filepath($machine_name, $format = 'path') {
  if ($eid = catalyst_lookup_entity('file', $machine_name)) {
    $file = entity_metadata_wrapper('catalyst', $eid);
    switch ($file->field__media_type->value()) {
      case 'local':
      case 'remote':
        return url($file->field__media_path->value());
      case 'custom':
        if (!isset($file->field__media_file) || !$file->field__media_file->value()) {
          throw new Exception(t('Missing catalyst file: @machine_name', array('@machine_name' => $machine_name)));
        }
        if ($format == 'uri') {
          return $file->field__media_file->file->value()->uri;
        }
        elseif ($format == 'url') {
          return $file->field__media_file->file->url->value();
        }
        else {
          $url = parse_url($file->field__media_file->file->url->value());
          return $url['path'];
        }
    }
  }
  // log error
}

function catalyst_media_fileurl($machine_name) {
  return catalyst_media_filepath($machine_name, 'url');
}

function catalyst_media_fileuri($machine_name) {
  return catalyst_media_filepath($machine_name, 'uri');
}


/**
 * Implements hook_form_alter().
 */
function catalyst_media_form_alter(&$form, &$form_state, $form_id) {
  if (isset($form['field__media_type'], $form['field__media_path'])) {
    $form['#attached']['js'][] = drupal_get_path('module', 'catalyst_media') . '/catalyst_media.admin.js';
    $form['#after_build'][] = 'catalyst_media_admin_form_after_build';
  }
}

/**
 * Implements hook_inline_entity_form_entity_form_alter().
 */
function catalyst_media_inline_entity_form_entity_form_alter(&$entity_form, &$form_state) {
  catalyst_media_form_alter($entity_form, $form_state, NULL);
}

function catalyst_media_admin_form_after_build($form, &$form_state) {
  $ids = array(
    'type' => $form['field__media_type']['#id'],
    'path' => $form['field__media_path']['#id'],
  );
  if (isset($form['field__body'])) {
    $ids['custom'] = $form['field__body']['#id'];
  }
  elseif (isset($form['field__media_file'])) {
    $ids['custom'] = $form['field__media_file']['#id'];
  }
  $form['#attached']['js'][] = array(
    'data' => array('catalystMediaAdmin' => array('ids' => $ids)),
    'type' => 'setting'
  );
  return $form;
}
